// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.17.3
// source: notif.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NotifTestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotifTestRequest) Reset() {
	*x = NotifTestRequest{}
	mi := &file_notif_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifTestRequest) ProtoMessage() {}

func (x *NotifTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notif_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifTestRequest.ProtoReflect.Descriptor instead.
func (*NotifTestRequest) Descriptor() ([]byte, []int) {
	return file_notif_proto_rawDescGZIP(), []int{0}
}

type NotifTestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotifTestResponse) Reset() {
	*x = NotifTestResponse{}
	mi := &file_notif_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifTestResponse) ProtoMessage() {}

func (x *NotifTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notif_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifTestResponse.ProtoReflect.Descriptor instead.
func (*NotifTestResponse) Descriptor() ([]byte, []int) {
	return file_notif_proto_rawDescGZIP(), []int{1}
}

func (x *NotifTestResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_notif_proto protoreflect.FileDescriptor

const file_notif_proto_rawDesc = "" +
	"\n" +
	"\vnotif.proto\x12\x02pb\"\x12\n" +
	"\x10NotifTestRequest\"-\n" +
	"\x11NotifTestResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2J\n" +
	"\fNotifService\x12:\n" +
	"\tNotifTest\x12\x14.pb.NotifTestRequest\x1a\x15.pb.NotifTestResponse\"\x00B\x1eZ\x1cgithub.com/crazy-max/diun/pbb\x06proto3"

var (
	file_notif_proto_rawDescOnce sync.Once
	file_notif_proto_rawDescData []byte
)

func file_notif_proto_rawDescGZIP() []byte {
	file_notif_proto_rawDescOnce.Do(func() {
		file_notif_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_notif_proto_rawDesc), len(file_notif_proto_rawDesc)))
	})
	return file_notif_proto_rawDescData
}

var file_notif_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_notif_proto_goTypes = []any{
	(*NotifTestRequest)(nil),  // 0: pb.NotifTestRequest
	(*NotifTestResponse)(nil), // 1: pb.NotifTestResponse
}
var file_notif_proto_depIdxs = []int32{
	0, // 0: pb.NotifService.NotifTest:input_type -> pb.NotifTestRequest
	1, // 1: pb.NotifService.NotifTest:output_type -> pb.NotifTestResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_notif_proto_init() }
func file_notif_proto_init() {
	if File_notif_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_notif_proto_rawDesc), len(file_notif_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notif_proto_goTypes,
		DependencyIndexes: file_notif_proto_depIdxs,
		MessageInfos:      file_notif_proto_msgTypes,
	}.Build()
	File_notif_proto = out.File
	file_notif_proto_goTypes = nil
	file_notif_proto_depIdxs = nil
}
